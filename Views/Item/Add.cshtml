<!--Bearbeiter: Abbas Dayeh (Maske)
                Yusuf Can Sönmez (Viewbag, Budget Bugfix)-->
@model WebShop.Models.ItemModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Hinzufügen</h2>

<div class="m-1 card p-3 bg-light">
    @using (Html.BeginForm("Add", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <!-- Beginnt ein Formular, das eine POST-Anfrage an die "Add"-Aktion des "Item"-Controllers sendet. -->
        <div class="row">
            <div class="col-md-6">
                <!-- Ein Container für das Name-Feld. -->
                @Html.LabelFor(model => model.Name)
                <!-- Ein Label für das Name-Feld. -->
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @data_placement = "auto", @maxlength = "50" })
                <!-- Ein Eingabefeld für den Namen mit der CSS-Klasse "form-control". -->
                @Html.ValidationMessageFor(m => m.Name)
                <!-- Eine Validierungsnachricht für das Name-Feld. -->
            </div>
            <div class="col-md-6">
                <!-- Ein Container für das Typ-Feld. -->
                @Html.LabelFor(model => model.Type)
                <!-- Ein Label für das Typ-Feld. -->
                @Html.DropDownList("Type",
                        EnumHelper.GetSelectList(typeof(WebShop.Models.Enum.ItemTypeEnum)),
                        null,
                        new { @class = "form-control", @id = "ddlItemType" })
                <!-- Ein Dropdown-Feld für die Typ-Optionen mit der CSS-Klasse "form-control". -->
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-6">
                <!-- Ein Container für das Beschreibung-Feld. -->
                @Html.LabelFor(model => model.Description)
                <!-- Ein Label für das Beschreibung-Feld. -->
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @data_placement = "auto", style = "height: 108px;" })
                <!-- Ein Textbereich für die Beschreibung mit der CSS-Klasse "form-control". -->
            </div>
            <div class="col-md-6">
                <!-- Ein Container für das Kosten-Feld. -->
                @Html.LabelFor(model => model.Cost)
                <!-- Ein Label für das Kosten-Feld. -->
                @Html.TextBoxFor(model => model.Cost, new { @class = "form-control", @data_placement = "auto", @id = "txtCost" })
                <!-- Ein Eingabefeld für die Kosten mit der CSS-Klasse "form-control". -->
                @Html.ValidationMessageFor(m => m.Cost)
                <!-- Eine Validierungsnachricht für das Kosten-Feld. -->
            </div>
        </div>
        <div class="row mt-3">
            <label>Bild hinzufügen</label>
            <!-- Ein Label für das Bild-Hochladen-Feld. -->
            @Html.TextBoxFor(model => model.ImageData, new { Type = "File", @class = "form-control" })
            <!-- Ein Eingabefeld für das Hochladen von Bildern mit der CSS-Klasse "form-control". -->
        </div>

        <hr />
        <div>
            <div>
                <div class="pull-left">
                    <!-- Ein Link, um den Vorgang abzubrechen und zur Artikel-Detailseite zurückzukehren. -->
                    @Html.ActionLink("Abbrechen", "ItemDetails", "Item", new { @class = "btn btn-dark" })
                </div>
            </div>
            <div style="text-align:right">
                <!-- Eine Schaltfläche zum Absenden des Formulars mit der CSS-Klasse "btn btn-primary". -->
                <input type="submit" class="btn btn-primary" value="Bestätigen" />
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $("#txtCost").keypress(function (evt) {
        var $this = this;

        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 44) {
            //Überprüft, ob der Text bereits ein Komma enthält.
            if ($this.value.indexOf(',') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31 &&
                (charCode < 48 || charCode > 57)) {
                return false;
            }
            else {
                if ($this.value.indexOf(',') !== -1 && $this.value.split(",")[1] !== '' && $this.value.split(",")[1].length === 2) { // restricting to 2 decimal
                    return false;
                }
            }
        }
        return true;
    })
</script>