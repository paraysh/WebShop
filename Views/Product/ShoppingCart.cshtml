@model IEnumerable<WebShop.Models.ShoppingCartModel>
@{
    ViewBag.Title = "Shopping Cart";
    decimal TotalAmt = 0;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Warenkorb</h2>

@if (Model != null && Model.Count() > 0)
{
    <table class="table table-striped-columns" style="width: 100%">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th>Kosten (€ pro Monat)</th>
                <th>Leihdauer (Monate)</th>
                <th>Leihbeginn</th>
                <th>Leihrückgabe</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            TotalAmt += item.Total;

            <tr>
                <td>
                    <a href="@Url.Action("RemoveItem", "Product", new { ItemId = item.Id })" title="Remove">
                        <i class="fa fa-lg fa-trash" style="color:orangered"></i>
                    </a>

                    @*@Html.ActionLink(" ", "RemoveItem", "Product", new { ItemId = item.Id }, new { @class = "btn btn-lg btn-outline-danger" })*@
                </td>
                <td>
                    <img src="~/Content/ItemImages/@item.ImageName" height="60px" width="60px" class="img-rounded" />
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.UnitPrice
                </td>
                @{
                    var listPeriod = new SelectList(new[]
                        {
                            new {ID="1", Name="1 Monate"},
                            new {ID="2", Name="2 Monate"},
                            new {ID="3", Name="3 Monate"},
                            new {ID="4", Name="4 Monate"},
                            new {ID="5", Name="5 Monate"},
                            new {ID="6", Name="6 Monate"},
                            new {ID="7", Name="7 Monate"},
                            new {ID="8", Name="8 Monate"},
                            new {ID="9", Name="9 Monate"},
                            new {ID="10", Name="10 Monate"},
                            new {ID="11", Name="11 Monate"},
                            new {ID="12", Name="12 Monate"}
                        },
                        "ID", "Name", item.LendingPeriodMonths);
                }
                <td>
                    @Html.DropDownList("ddlLendingPeriod", listPeriod, new { @class = "form-control", @itemid = item.Id, @onChange = "EditCart(this)" })
                </td>
                <td>
                    @item.LendingStartDt.ToShortDateString()
                </td>
                <td>
                    @item.LendingEndDt.ToShortDateString()
                </td>
                <td style="text-align: right">
                    @item.Total
                </td>
            </tr>
        }
        <tr style="border-top: 2px solid maroon">
            <td colspan="7" style="text-align: right">
                <h3>Gesamtbetrag</h3>
            </td>
            <td style="text-align: right">
                <h3>@TotalAmt</h3>
            </td>
        </tr>

        <tr>
            <td colspan="6">
                <a href="index" class="btn btn-primary">
                    Zurück zu Artikeln
                </a>
            </td>
            <td colspan="6" style="text-align: right">
                <input type="button" value="Bestellung aufgeben" name="PlaceOrder" id="btnPlaceOrder" onclick="PlaceOrder()" class="btn btn-success" />
            </td>
        </tr>
    </table>
}
else
{
    <h3 style="text-align:center">
        Warenkorb ist leer.
    </h3>
}


<script type="text/javascript">
    function EditCart(item) {
        var itemId = $(item).attr("itemid");
        var lendingPeriod = $(item).val();
        var formData = new FormData();
        formData.append("ItemId", itemId);
        formData.append("LendingPeriod", lendingPeriod);

        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            url: '/Product/EditCart',
            success: function (data) {
                if (data.Success) {
                    location.reload();
                }
            },
            error: function () {
                alert("Something went wrong!");
            }
        });
    }

    function PlaceOrder() {
        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            //data: formData,
            url: '/Product/PlaceOrder',
            success: function (data) {
                if (data.Success) {
                    window.location.href = "/Product/Index";
                }
            },
            error: function (data) {
                alert("Something went wrong!");
            }
        });
    }
</script>