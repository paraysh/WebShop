@model IEnumerable<WebShop.Models.ProductModel>
@{
    ViewBag.Title = "Product List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .container {
        width: 100%;
    }

    .btn-check:checked + .btn {
        background: black !important;
    }
</style>

<div class="container">
    <h2>Artikel</h2>

    <!--<div class="row input-group pe-3 ps-5">
        <span class="input-group-addon"><i class="fa fa-search"></i></span>-->
    @* Suchfeld für die Artikelsuche *@
    <!--<input class="tag_input input-lg form-control" id="txtSearch" list="json-datalist" placeholder="Artikel suchen">
        <datalist id="json-datalist"></datalist>
    </div>-->

    @{
        // Initialisierung der Filteroptionen
        string both = "";
        string Hardware = "";
        string Software = "";
        var selectedFilter = ViewBag.SelectedFilter;
        if (selectedFilter == null)
        {
            both = "checked";
        }
        else if (selectedFilter == "Hardware")
        {
            Hardware = "checked";
        }
        else
        {
            Software = "checked";
        }
    }

<div class="row">
    <div class="col-md-6">
        <div class="input-group">
            <input type="text" class="form-control" id="txtSearch" value="@ViewBag.SearchString" placeholder="Artikel suchen">
            <div class="input-group-append">
                <button class="btn btn-secondary" type="button" id="btnSearch">
                    <i class="fa fa-search"></i>
                </button>
                @if (@ViewBag.SearchString != null)
                {
                    @Html.ActionLink("Zurücksetzen", "Index", new { }, new { @class = "btn btn-primary" })
                }
            </div>
        </div>
    </div>

    <div class="col-md-6" style="text-align:right">
        @* Filteroptionen für die Artikel *@
        <input type="radio" class="btn-check" name="filterOptions" id="rdBoth" autocomplete="off" @both>
        <label class="btn btn-secondary radioBtn" for="rdBoth">Alle Artikel</label>

        <input type="radio" class="btn-check" name="filterOptions" id="rdHardware" autocomplete="off" @Hardware>
        <label class="btn btn-secondary radioBtn" for="rdHardware">Hardware</label>

        <input type="radio" class="btn-check" name="filterOptions" id="rdSoftware" autocomplete="off" @Software>
        <label class="btn btn-secondary radioBtn" for="rdSoftware">Software</label>
    </div>
</div>



    

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-1 mt-3">
                <div class="div-tile"> @*product-tile class for old style*@
                    <div class="px-1">
                        <div onclick="location.href='/Product/DetailsById/@item.Id'">
                            <div style="text-align: center; border-bottom: 1px solid maroon">
                                <h3>@item.Name</h3>
                            </div>

                            @*<div class="row">*@
                        <div class="col-md-12 p-2" style="text-align:center">
                            @* Bild des Artikels *@
                            @if (System.Configuration.ConfigurationManager.AppSettings["Env"] == "local")
                            {
                                <img src="@System.Configuration.ConfigurationManager.AppSettings["LocalStoragePath"]@item.ImageName" height="150" />
                                <!-- Zeigt das Bild des Artikels an. -->
                            }
                            else
                            {
                                <img src="@System.Configuration.ConfigurationManager.AppSettings["AzureStoragePath"]@item.ImageName" height="150" />
                                <!-- Zeigt das Bild des Artikels an. -->
                            }
                        </div>
                            @*</div>*@
                        </div>
                        <div class="row p-1 mx-1" style="border-top: 2px solid maroon">
                            <div class="col-md-5 mt-1" style="font-size: 18px;" onclick="location.href='/Product/DetailsById/@item.Id'">
                                <b>@item.Cost</b> (€ pro Monat)
                            </div>

                            <div class="col-md-7" style="text-align: right;">
                                @if (item.ItemsInStock > 0)
                                {
                                    if (ViewBag.UserRole == (int)WebShop.Models.Enum.UserRoleEnum.Employee || ViewBag.UserRole == (int)WebShop.Models.Enum.UserRoleEnum.TeamLeaders)
                                    {
                                        @* Button zum Hinzufügen des Artikels zum Warenkorb *@
                                        <button class="cart-button" name="AddToCart" value="Zum Warenkorb hinzufügen" itemid="@item.Id" id="btnAddToCart" onclick="AddToCart(this)">
                                            <span class="add-to-cart">Zum Warenkorb hinzufügen</span>
                                            <span class="added">Hinzugefügt</span>
                                            <i class="fa fa-shopping-cart"></i>
                                            <i class="fa fa-box"></i>
                                        </button>
                                    }
                                }
                                else
                                {
                                    @* Button, der anzeigt, dass der Artikel nicht verfügbar ist *@
                                    <input type="button" name="OutOfStock" value="Nicht verfügbar" class="btn btn-warning mt-2" id="btnOutOfStock" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    function AddToCart(item) {
        // Fügt eine CSS-Klasse hinzu, um den Button als geklickt zu markieren.
        $(item).addClass("clicked");
        var itemId = $(item).attr("itemid");
        var formData = new FormData();
        formData.append("ItemId", itemId);

        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            url: '/Product/AddToCart',
            success: function (data) {
                if (data.Success) {
                    // Aktualisiert die Warenkorb-Anzeige.
                    $("#cartItem").text("Warenkorb(" + data.Counter + ")");
                }
            },
            error: function () {
                ShowAlert('Error', "Something went wrong!", 'danger');
            }
        });
    };

    $("#txtSearch").keypress(function (e) {
        if (e.key === "Enter") {
            // Cancel the default action, if needed
            e.preventDefault();
            // Trigger the button element with a click
            $("#btnSearch").click();
        }
    });

    $("#btnSearch").click(function (e) {
        var searchText = $("#txtSearch").val();
        window.location.href = '/Product/Index?SearchString=' + searchText;
    });


    // Event-Handler für die Filteroptionen.
    $('input[type=radio][name=filterOptions]').change(function () {
        var $this = this;
        var id = $this.getAttribute("Id");
        if (id == 'rdHardware') {
            window.location.href = '/Product/IndexFilter?filter=Hardware';
        }
        else if (id == 'rdSoftware') {
            window.location.href = '/Product/IndexFilter?filter=Software';
        } else {  // alle Artikel
            window.location.href = '/Product/Index';
        }
    });
</script>