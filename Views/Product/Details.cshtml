@model WebShop.Models.Entity.tblItem
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function AddToCart(item) {
        $("#btnAddToCart").addClass("clicked");
        var itemId = $(item).attr("itemid");
        var formData = new FormData();
        formData.append("ItemId", itemId);

        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            url: '/Product/AddToCart',
            success: function (data) {
                if (data.Success) {
                    $("#cartItem").text("Warenkorb(" + data.Counter + ")");
                    window.location.href = '/Product/Index';
                }
            },
            error: function () {
                alert("Something went wrong!");
            }
        });
    }
</script>

<h2>Artikelinformationen</h2>


<div class="m-1 card p-3 bg-light">
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.Id)
            @Html.TextBoxFor(model => model.Id, new { @class = "form-control", @data_placement = "auto", @disabled = "disabled", @id = "txtItemId" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @data_placement = "auto", @maxlength = "50", @disabled = "disabled" })
        </div>
        <div class="col-md-6">
            <label>Artikelart</label>
            @Html.DropDownList("Type",
               EnumHelper.GetSelectList(typeof(WebShop.Models.Enum.ItemTypeEnum)),
               null,
               new { @class = "form-control", @id = "ddlItemType", @disabled = "disabled" })
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-6">
            <label>Beschreibung</label>
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @data_placement = "auto", @disabled = "disabled" })
        </div>
        <div class="col-md-6">
            <label>Kosten (€ pro Monat)</label>
            @Html.TextBoxFor(model => model.Cost, new { @class = "form-control", @data_placement = "auto", @maxlength = "50", @disabled = "disabled" })
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-6">
            <label>Bild:</label>
            <img src="~/Content/ItemImages/@Model.ImageName" class="object-fit-contain border rounded form-control" />
        </div>
    </div>
    <hr />

    <div class="row">
        <div class="col-md-6">
            <a href="/Product/Index" class="btn btn-primary">
                Zurück zu Artikeln
            </a>
        </div>
        <div class="col-md-6" style="text-align: right">
            @if (Model.tblStocks.Sum(p => p.Quantity) > 0)
            {
                if (ViewBag.UserRole == (int)WebShop.Models.Enum.UserRoleEnum.Employee || ViewBag.UserRole == (int)WebShop.Models.Enum.UserRoleEnum.TeamLeaders)
                {
                    <button class="cart-button" name="AddToCart" value="Zum Warenkorb hinzufügen" itemid="@Model.Id" id="btnAddToCart" onclick="AddToCart(this)">
                        <span class="add-to-cart">Zum Warenkorb hinzufügen</span>
                        <span class="added">Hinzugefügt</span>
                        <i class="fa fa-shopping-cart"></i>
                        <i class="fa fa-box"></i>
                    </button>
                }
            }
            else
            {
                <input type="button" name="OutOfStock" value="Nicht verfügbar" class="btn btn-warning" id="btnOutOfStock" />
            }

        </div>
    </div>
</div>